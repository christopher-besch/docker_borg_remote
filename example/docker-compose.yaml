version: "3.7"

services:
    BorgServer:
        image: chrisbesch/docker_borg_server
        volumes:
            - "./authorized_keys:/var/lib/borg_server/authorized_keys:ro"
            # all repos shall be mounted into subdirs of /var/lib/borg_server/repos
            - "./borg_repo1:/var/lib/borg_server/repos/borg_repo1"
            - "./borg_repo2:/var/lib/borg_server/repos/borg_repo2"
        networks: ["common"]
    BorgClient:
        image: chrisbesch/docker_borg_client
        volumes:
            - "./priv_key:/var/lib/borg_client/priv_key:ro"
            # all subdirs in /var/lib/borg_client/repos get pulled from the server
            - "./borg_repo1_out:/var/lib/borg_client/repos/borg_repo1"
            - "./borg_repo2_out:/var/lib/borg_client/repos/borg_repo2"
        environment:
            - BORG_SERVER=BorgServer
            - PORT=22
            - PASSPHRASE=test_passphrase

            # see https://borgbackup.readthedocs.io/en/stable/internals/data-structures.html?highlight=compression#compression
            - BORG_COMPRESSION=zstd,22
            # see: https://borgbackup.readthedocs.io/en/stable/usage/prune.html
            # leave empty to not prune
            # make sure that this matches or exceeds the servers settings
            # otherwise the client would delete and recreate the same archive over and over
            # - "PRUNE_CFG=--keep-last 3"
            # if borg on server already creates an origin directory
            # - DEL_ORIGIN_DIR=true

            # when to run backup <- requires chrisbesch/docker_cron
            # runs every minute
            - "CRON_TIME=* * * * *"
        depends_on:
            - BorgServer
        networks: ["common"]

    DockerCron:
        image: chrisbesch/docker_cron
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:rw"
        environment:
            - TZ=Europe/Berlin

networks:
    common:

